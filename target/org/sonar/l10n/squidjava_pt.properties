rule.squid.ArchitecturalConstraint.name=Architectural constraint
rule.squid.ArchitecturalConstraint.param.fromClasses=Optional. If this property is not defined, all classes should adhere to this constraint. Ex : **.web.**
rule.squid.ArchitecturalConstraint.param.toClasses=Mandatory. Ex : java.util.Vector, java.util.Hashtable, java.util.Enumeration

rule.squid.AvoidBreakOutsideSwitch.name=Avoid using 'break' branching statement outside a 'switch' statement

rule.squid.AvoidContinueStatement.name=Avoid using 'continue' branching statement

rule.squid.CallToDeprecatedMethod.name=Avoid use of deprecated method

rule.squid.ClassCyclomaticComplexity.name=Avoid too complex class
rule.squid.ClassCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.EmptyFile.name=Empty file

rule.squid.MaximumInheritanceDepth.name=Avoid too deep inheritance tree
rule.squid.MaximumInheritanceDepth.param.max=Maximum depth of the inheritance tree.

rule.squid.MethodCyclomaticComplexity.name=Avoid too complex method
rule.squid.MethodCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.NoSonar.name=Avoid use of //NOSONAR marker

rule.squid.UndocumentedApi.name=Undocumented API
rule.squid.UndocumentedApi.param.forClasses=Optional. If this property is not defined, all classes should adhere to this constraint. Ex : **.api.**

rule.squid.UnusedPrivateMethod.name=Unused private method

rule.squid.UnusedProtectedMethod.name=Unused protected method

rule.squid.CommentedOutCodeLine.name=Avoid commented-out lines of code

rule.squid.CycleBetweenPackages.name=Avoid cycle between java packages
